html:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    
    <h1>Autenticación con JWT</h1>
	<button onclick="fetchDataWithJWT()">Obtener Datos Protegidos (GET)</button>
	<form id="postForm">
    	<input type="text" id="data" placeholder="Ingresa datos" required>
    	<button type="submit">Enviar Datos (POST)</button>
	</form>
	<div id="response"></div>
    <input type="text" id="tokenInput" placeholder="Ingresa nuevo token">
    <button id="saveToken">Guardar Token</button>

	<script src="Script.js"></script>

</body>
</html>


JS:
// Guardar el token JWT en localStorage
const JWT_TOKEN = localStorage.getItem('jwt_token') || 'TU_TOKEN_GENERADO_EN_JWT_IO';

// Función para validar y manejar expiración real del token
function validateToken(token) {
    try {
        const payload = JSON.parse(atob(token.split('.')[1]));
        if (payload.exp < Date.now() / 1000) {
            alert("El token ha expirado. Inicia sesión nuevamente.");
            localStorage.removeItem('jwt_token');
            return false;
        }
        return true;
    } catch (error) {
        console.error("Token inválido:", error);
        return false;
    }
}

// Función GET protegida con JWT
async function fetchDataWithJWT() {
    if (!validateToken(JWT_TOKEN)) {
        return;
    }

    try {
        const response = await fetch('https://jsonplaceholder.typicode.com/posts/1', {
            headers: { 'Authorization': `Bearer ${JWT_TOKEN}` }
        });
        const data = await response.json();
        document.getElementById('response').innerHTML = `<pre>${JSON.stringify(data, null, 2)}</pre>`;
    } catch (error) {
        console.error("Error GET:", error);
    }
}

// Función POST protegida con JWT
document.getElementById('postForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    if (!validateToken(JWT_TOKEN)) {
        return;
    }

    const postData = {
        title: document.getElementById('data').value,
        body: 'Contenido de prueba',
        userId: 1
    };

    try {
        const response = await fetch('https://jsonplaceholder.typicode.com/posts', {
            method: 'POST',
            headers: {
                'Authorization': `Bearer ${JWT_TOKEN}`,
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(postData)
        });
        const data = await response.json();
        document.getElementById('response').innerHTML = `<pre>${JSON.stringify(data, null, 2)}</pre>`;
    } catch (error) {
        console.error("Error POST:", error);
    }
});

// Guardar el token en localStorage cuando se obtiene de un backend
document.getElementById('saveToken').addEventListener('click', () => {
    const newToken = document.getElementById('tokenInput').value;
    if (newToken) {
        localStorage.setItem('jwt_token', newToken);
        alert("Token guardado correctamente.");
    }
});
